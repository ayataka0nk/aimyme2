generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                        String                     @id @default(uuid())
  email                     String                     @unique @map("email")
  name                      String                     @map("name")
  password                  String                     @map("password")
  inProgressTimeEntryId     String?                    @map("in_progress_time_entry_id")
  projectMembers            ProjectMember[]
  monthlyProjectAllocations MonthlyProjectAllocation[]
  timeEntries               TimeEntry[]
  inProgressTimeEntry       TimeEntry?                 @relation("InProgressTimeEntryUsers", fields: [inProgressTimeEntryId], references: [id])

  @@map("users")
}

model Project {
  id                        String                     @id @default(uuid())
  name                      String                     @map("name")
  description               String                     @map("description")
  isArchived                Boolean                    @default(false) @map("is_archived")
  projectMembers            ProjectMember[]
  monthlyProjectAllocations MonthlyProjectAllocation[]
  timeEntries               TimeEntry[]

  @@map("projects")
}

enum ProjectUserRole {
  ADMIN
  MEMBER
}

model ProjectMember {
  userId    String          @map("user_id")
  projectId String          @map("project_id")
  user      User            @relation(fields: [userId], references: [id])
  project   Project         @relation(fields: [projectId], references: [id])
  role      ProjectUserRole @map("role")

  @@id([userId, projectId])
  @@map("project_members")
}

model MonthlyProjectAllocation {
  id             String  @id @default(uuid())
  projectId      String  @map("project_id")
  userId         String  @map("user_id")
  year           Int     @map("year")
  month          Int     @map("month")
  allocatedHours Int     @map("allocated_hours")
  project        Project @relation(fields: [projectId], references: [id])
  user           User    @relation(fields: [userId], references: [id])

  @@unique([projectId, userId, year, month])
  @@map("monthly_project_allocations")
}

model TimeEntry {
  id              String    @id @default(uuid())
  userId          String    @map("user_id")
  projectId       String    @map("project_id")
  startTime       DateTime? @map("start_time")
  endTime         DateTime? @map("end_time")
  description     String?   @map("description")
  user            User      @relation(fields: [userId], references: [id])
  project         Project   @relation(fields: [projectId], references: [id])
  inProgressUsers User[]    @relation("InProgressTimeEntryUsers")

  @@map("time_entries")
}
